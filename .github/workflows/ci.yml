name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: 1
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ROCKET_RECAPTCHA: ${{ secrets.ROCKET_RECAPTCHA }}

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: asami
          POSTGRES_PASSWORD: password
          POSTGRES_DB: asami_development
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U asami"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Download fixed chrome version for tests
        run: |
          curl -L https://asami.ams3.digitaloceanspaces.com/chrome -o integration_tests/chromedrivers/chrome-linux/chrome
          chmod +x integration_tests/chromedrivers/chrome-linux/chrome
          integration_tests/chromedrivers/chrome-linux/chrome --version

      - name: Install xvfb
        run: sudo apt-get install -y xvfb

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.81.0
          target: x86_64-unknown-linux-gnu
          components: rustfmt, clippy
          override: true

      - name: Install Node and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: pwa/yarn.lock

      - name: Cache PWA dependencies
        uses: actions/cache@v3
        with:
          path: |
            pwa/node_modules
          key: pwa-deps-${{ runner.os }}-${{ hashFiles('pwa/yarn.lock') }}
          restore-keys: |
            pwa-deps-${{ runner.os }}-

      - name: Install PWA deps
        working-directory: ./pwa
        run: yarn install --frozen-lockfile

      - name: Cache PWA dependencies
        uses: actions/cache@v3
        with:
          path: |
            contract/node_modules
          key: contract-deps-${{ runner.os }}-${{ hashFiles('contract/yarn.lock') }}
          restore-keys: |
            contract-deps-${{ runner.os }}-

      - name: Install contract deps
        working-directory: ./contract
        run: yarn install --frozen-lockfile

      - name: Cache Rust
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: rust-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: rust-${{ runner.os }}-

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features postgres

      - name: Prepare database
        run: |
          sudo apt-get install -y libpq-dev
          cd api
          sqlx database reset -y

      - name: Run cargo fmt
        run: cargo fmt -- --check

      - name: Run cargo clippy
        run: cargo clippy --workspace --all-targets --all-features --no-deps -- -D warnings

      - name: Run tests
        run: |
          cd integration_tests
          xvfb-run -a ./run webapp adds_tokens_to_wallet

