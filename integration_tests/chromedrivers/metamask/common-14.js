LavaPack.loadBundle([[7400,{"../../app/scripts/lib/util":183,"../../shared/constants/app":5643,"../../shared/constants/hardware-wallets":5650,"../../shared/constants/metametrics":5654,"../../shared/lib/four-byte":5687,"../../shared/lib/switch-direction":5694,"../../shared/modules/conversion.utils":5710,"../../shared/modules/error":5712,"../../shared/modules/hexstring-utils":5716,"../../shared/modules/i18n":5717,"../../shared/modules/selectors":5726,"../../shared/modules/selectors/networks":5727,"../../shared/modules/string-utils":5730,"../ducks/alerts/unconnected-account":6660,"../ducks/metamask/metamask":6676,"../ducks/send":6681,"../helpers/constants/notifications":6692,"../pages/swaps/swaps.util":7367,"../selectors":7385,"./actionConstants":7399,"./background-connection":7402,"@metamask/profile-sync-controller/sdk":2392,"@metamask/rpc-errors":2484,"@sentry/browser":3008,buffer:3998,lodash:4779,loglevel:4787},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(t,e,n){(function(e){(function(){Object.defineProperty(n,"__esModule",{value:!0}),n.abortTransactionSigning=function(t){return async e=>{try{await(0,P.submitRequestToBackground)("abortTransactionSigning",[t])}catch(t){e(nt(t))}}},n.accountTrackerStartPolling=async function(t){const e=await(0,P.submitRequestToBackground)("accountTrackerStartPolling",[t]);return await ft(e),e},n.accountTrackerStopPollingByPollingToken=async function(t){await(0,P.submitRequestToBackground)("accountTrackerStopPollingByPollingToken",[t]),await wt(t)},n.addImportedTokens=function(t,e){return async n=>{try{await(0,P.submitRequestToBackground)("addImportedTokens",[t,e])}catch(t){(0,R.logErrorWithMessage)(t)}finally{await st(n)}}},n.addNetwork=function(t){return async e=>{a.default.debug("background.addNetwork",t);try{return await(0,P.submitRequestToBackground)("addNetwork",[t])}catch(t){(0,R.logErrorWithMessage)(t),e(nt("Had a problem adding networks!"))}return undefined}},n.addNewAccount=function(){return a.default.debug("background.addNewAccount"),async(t,e)=>{const n=(0,l.getMetaMaskHdKeyrings)(e()),[a]=n;let r=a;if(!r)throw console.error("Should never reach this. There is always a keyring"),new Error("Keyring not found");const o=r.accounts;let s;t(Z());try{s=await(0,P.submitRequestToBackground)("addNewAccount",[o.length])}catch(e){throw t(nt(e)),e}finally{t(tt())}return await st(t),s}},n.addNft=function(t,e,n){return async a=>{if(!t)throw new Error("MetaMask - Cannot add NFT without address");if(!e)throw new Error("MetaMask - Cannot add NFT without tokenID");n||a(Z());try{await(0,P.submitRequestToBackground)("addNft",[t,e])}catch(t){(0,R.logErrorWithMessage)(t),a(nt(t))}finally{await st(a),a(tt())}}},n.addNftVerifyOwnership=function(t,e,n){return async a=>{if(!t)throw new Error("MetaMask - Cannot add NFT without address");if(!e)throw new Error("MetaMask - Cannot add NFT without tokenID");n||a(Z());try{await(0,P.submitRequestToBackground)("addNftVerifyOwnership",[t,e])}catch(t){if((0,R.isErrorWithMessage)(t)){const e=(0,R.getErrorMessage)(t);if(e.includes("This NFT is not owned by the user")||e.includes("Unable to verify ownership"))throw t;(0,R.logErrorWithMessage)(t),a(nt(t))}}finally{await st(a),a(tt())}}},n.addPermittedAccount=function(t,e){return async n=>{await new Promise(((n,a)=>{(0,P.callBackgroundMethod)("addPermittedAccount",[t,e],(t=>{t?a(t):n()}))})),await st(n)}},n.addPermittedAccounts=function(t,e){return async n=>{await new Promise(((n,a)=>{(0,P.callBackgroundMethod)("addPermittedAccounts",[t,e],(t=>{t?a(t):n()}))})),await st(n)}},n.addPermittedChain=function(t,e){return async n=>{await new Promise(((n,a)=>{(0,P.callBackgroundMethod)("addPermittedChain",[t,e],(t=>{t?a(t):n()}))})),await st(n)}},n.addPermittedChains=function(t,e){return async n=>{await new Promise(((n,a)=>{(0,P.callBackgroundMethod)("addPermittedChains",[t,e],(t=>{t?a(t):n()}))})),await st(n)}},n.addPollingTokenToAppState=ft,n.addToAddressBook=function(t,e="",n=""){return a.default.debug("background.addToAddressBook"),async(a,r)=>{const{chainId:o}=(0,g.getProviderConfig)(r());let s;try{s=await(0,P.submitRequestToBackground)("setAddressBook",[(0,y.toChecksumHexAddress)(t),e,o,n]),await st(a)}catch(t){throw(0,R.logErrorWithMessage)(t),a(nt("Address book failed to update")),t}s||a(nt("Address book failed to update"))}},n.addToken=function({address:t,symbol:e,decimals:n,image:a,networkClientId:r},o){return async s=>{if(!t)throw new Error("MetaMask - Cannot add token without address");o||s(Z());try{await(0,P.submitRequestToBackground)("addToken",[{address:t,symbol:e,decimals:n,image:a,networkClientId:r}])}catch(t){(0,R.logErrorWithMessage)(t),s(nt(t))}finally{await st(s),s(tt())}}},n.addTransaction=async function(t,e){a.default.debug("background.addTransaction");const n=(0,P.generateActionId)();return await(0,P.submitRequestToBackground)("addTransaction",[t,{...e,origin:c.ORIGIN_METAMASK,actionId:n}])},n.addTransactionAndRouteToConfirmationPage=function(t,e){return async n=>{const r=(0,P.generateActionId)();try{a.default.debug("background.addTransaction");const o=await(0,P.submitRequestToBackground)("addTransaction",[t,{...e,actionId:r,origin:c.ORIGIN_METAMASK}]);return n(Q()),o}catch(t){throw n(tt()),n(nt(t)),t}}},n.addTransactionAndWaitForPublish=async function(t,e){a.default.debug("background.addTransactionAndWaitForPublish");const n=(0,P.generateActionId)();return await(0,P.submitRequestToBackground)("addTransactionAndWaitForPublish",[t,{...e,origin:c.ORIGIN_METAMASK,actionId:n}])},n.approvePermissionsRequest=function(t){return e=>{(0,P.callBackgroundMethod)("approvePermissionsRequest",[t],(t=>{t&&e(nt(t)),st(e)}))}},n.attemptLedgerTransportCreation=async function(){return await(0,P.submitRequestToBackground)("attemptLedgerTransportCreation")},n.automaticallySwitchNetwork=function(t,e){return async n=>{await $(t),await n(Y({networkClientId:t,origin:e})),await st(n)}},n.backupUserData=async function(){let t;try{t=await(0,P.submitRequestToBackground)("backupUserData")}catch(t){throw(0,R.logErrorWithMessage)(t),t}return t},n.cancelDecryptMsg=function(t){return async e=>{e(Z());try{await(0,P.submitRequestToBackground)("cancelDecryptMessage",[t.id])}finally{e(tt())}return await st(e),e(F(t.id)),e(X()),t}},n.cancelEncryptionPublicKeyMsg=function(t){return async e=>{e(Z());try{await(0,P.submitRequestToBackground)("cancelEncryptionPublicKey",[t.id])}finally{e(tt())}return await st(e),e(F(t.id)),e(X()),t}},n.cancelQRHardwareSignRequest=function(){return async t=>{t(tt()),await(0,P.submitRequestToBackground)("cancelQRHardwareSignRequest")}},n.cancelSmartTransaction=function(t){return async e=>{try{await(0,P.submitRequestToBackground)("cancelSmartTransaction",[t])}catch(t){if((0,R.logErrorWithMessage)(t),(0,R.isErrorWithMessage)(t)){const n=(0,R.getErrorMessage)(t);if(n.startsWith("Fetch error:")){const t=(0,h.parseSmartTransactionsError)(n);e({type:M.SET_SMART_TRANSACTIONS_ERROR,payload:t})}}throw t}}},n.cancelSyncQRHardware=function(){return async t=>{t(tt()),await(0,P.submitRequestToBackground)("cancelSyncQRHardware")}},n.cancelTx=function(t,e=!0){return n=>(e&&n(Z()),new Promise(((e,n)=>{(0,P.callBackgroundMethod)("rejectPendingApproval",[String(t.id),s.providerErrors.userRejectedRequest().serialize()],(t=>{t?n(t):e()}))})).then((()=>st(n))).then((()=>(n((0,f.resetSendState)()),n(F(t.id)),n(tt()),n(X()),t))).catch((t=>{throw n(tt()),t})))},n.cancelTxs=function(t){return async e=>{e(Z());try{const n=t.map((({id:t})=>t)),a=n.map((t=>new Promise(((e,n)=>{(0,P.callBackgroundMethod)("rejectPendingApproval",[String(t),s.providerErrors.userRejectedRequest().serialize()],(t=>{t?n(t):e()}))}))));await Promise.all(a),await st(e),e((0,f.resetSendState)()),n.forEach((t=>{e(F(t))}))}finally{(0,d.getEnvironmentType)()===c.ENVIRONMENT_TYPE_NOTIFICATION?mt():e(tt())}}},n.captureSingleException=function(t){return async(e,n)=>{const{singleExceptions:a}=n().appState;t in a||(e({type:M.CAPTURE_SINGLE_EXCEPTION,value:t}),(0,r.captureException)(Error(t)))}},n.checkAccountsPresence=function(t){return async()=>{try{return await(0,P.submitRequestToBackground)("checkAccountsPresence",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.checkAndUpdateAllNftsOwnershipStatus=async function(){await(0,P.submitRequestToBackground)("checkAndUpdateAllNftsOwnershipStatus")},n.checkAndUpdateSingleNftOwnershipStatus=async function(t){await(0,P.submitRequestToBackground)("checkAndUpdateSingleNftOwnershipStatus",[t,!1])},n.checkHardwareStatus=function(t,e){return a.default.debug("background.checkHardwareStatus",t,e),async n=>{n(Z());let a=!1;try{a=await(0,P.submitRequestToBackground)("checkHardwareStatus",[t,e])}catch(t){throw(0,R.logErrorWithMessage)(t),n(nt(t)),t}finally{n(tt())}return await st(n),a}},n.clearAccountDetails=function(){return{type:M.CLEAR_ACCOUNT_DETAILS}},n.clearPendingTokens=function(){return{type:M.CLEAR_PENDING_TOKENS}},n.clearSmartTransactionFees=function(){(0,P.submitRequestToBackground)("clearSmartTransactionFees")},n.clearSwapsQuotes=function(){return async t=>{await(0,P.submitRequestToBackground)("clearSwapsQuotes"),await st(t)}},n.clearSwitchedNetworkDetails=function(){return async t=>{await(0,P.submitRequestToBackground)("clearSwitchedNetworkDetails",[]),await st(t)}},n.closeCurrentNotificationWindow=X,n.closeNotificationPopup=mt,n.closeWelcomeScreen=function(){return{type:M.CLOSE_WELCOME_SCREEN}},n.completeOnboarding=rt,n.completedTx=F,n.connectHardware=function(t,e,n,r){return a.default.debug("background.connectHardware",t,e,n),async(a,s)=>{const{ledgerTransportType:i}=s().metamask;let u;a(Z(`Looking for your ${(0,o.capitalize)(t)}...`));try{if(t===T.HardwareDeviceNames.ledger&&i===T.LedgerTransportTypes.webhid){const t=await window.navigator.hid.requestDevice({filters:[{vendorId:T.LEDGER_USB_VENDOR_ID}]});if(!t.some((t=>t.vendorId===Number(T.LEDGER_USB_VENDOR_ID))))throw new Error(r("ledgerWebHIDNotConnectedErrorMessage"))}u=await(0,P.submitRequestToBackground)("connectHardware",[t,e,n])}catch(e){(0,R.logErrorWithMessage)(e);const n=(0,R.getErrorMessage)(e);throw t===T.HardwareDeviceNames.ledger&&i===T.LedgerTransportTypes.webhid&&(0,R.isErrorWithMessage)(e)&&n.match("Failed to open the device")?(a(nt(r("ledgerDeviceOpenFailureMessage"))),new Error(r("ledgerDeviceOpenFailureMessage"))):(t!==T.HardwareDeviceNames.qr&&a(nt(e)),e)}finally{a(tt())}return await st(a),u}},n.createCancelTransaction=function(t,e,n={}){let r;return a.default.debug("background.createCancelTransaction"),a=>{const o=(0,P.generateActionId)();return new Promise(((s,i)=>{(0,P.callBackgroundMethod)("createCancelTransaction",[t,e,{...n,actionId:o}],((e,n)=>{var o;if(e)return null!=e&&null!==(o=e.message)&&void 0!==o&&o.includes("Previous transaction is already confirmed")&&a(z({name:"TRANSACTION_ALREADY_CONFIRMED",originalTransactionId:t})),a(nt(e)),void i(e);if(n){const t=(0,l.getCurrentNetworkTransactions)({metamask:n}),{id:e}=t[t.length-1];r=e,s()}}))})).then((()=>st(a))).then((()=>r))}},n.createEventFragment=function(t){const e=(0,P.generateActionId)();return(0,P.submitRequestToBackground)("createEventFragment",[{...t,actionId:e}])},n.createMetaMetricsDataDeletionTask=async function(){return await(0,P.submitRequestToBackground)("createMetaMetricsDataDeletionTask")},n.createNewVault=q,n.createNewVaultAndGetSeedPhrase=function(t){return async e=>{e(Z());try{await q(t);return await O(t)}catch(t){throw e(nt(t)),(0,R.isErrorWithMessage)(t)?new Error((0,R.getErrorMessage)(t)):t}finally{e(tt())}}},n.createNewVaultAndRestore=function(t,n){return r=>{r(Z()),a.default.debug("background.createNewVaultAndRestore");const o=Array.from(e.from(n,"utf8").values());return new Promise(((e,n)=>{(0,P.callBackgroundMethod)("createNewVaultAndRestore",[t,o],(t=>{t?n(t):e()}))})).then((()=>r(L()))).then((()=>{r(j()),r(tt())})).catch((t=>(r(nt(t)),r(tt()),Promise.reject(t))))}},n.createOnChainTriggers=function(){return async()=>{try{await(0,P.submitRequestToBackground)("createOnChainTriggers")}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.createRetryTransaction=function(t,e){let n;return a=>new Promise(((r,o)=>{const s=(0,P.generateActionId)();(0,P.callBackgroundMethod)("createSpeedUpTransaction",[t,e,{actionId:s}],((t,e)=>{if(t)return a(nt(t)),void o(t);if(e){const t=(0,l.getCurrentNetworkTransactions)(e);n=t[t.length-1],r()}}))})).then((()=>st(a))).then((()=>n))},n.createSpeedUpTransaction=function(t,e,n={}){let r;return a.default.debug("background.createSpeedUpTransaction"),a=>{const o=(0,P.generateActionId)();return new Promise(((s,i)=>{(0,P.callBackgroundMethod)("createSpeedUpTransaction",[t,e,{...n,actionId:o}],((t,e)=>{if(t)return a(nt(t)),void i(t);if(e){const t=(0,l.getCurrentNetworkTransactions)(e);r=t[t.length-1],s()}}))})).then((()=>st(a))).then((()=>r))}},n.createTransactionEventFragment=function(t){const e=(0,P.generateActionId)();return(0,P.submitRequestToBackground)("createTransactionEventFragment",[{transactionId:t,actionId:e}])},n.currencyRateStartPolling=async function(t){const e=await(0,P.submitRequestToBackground)("currencyRateStartPolling",[{nativeCurrencies:t}]);return await ft(e),e},n.currencyRateStopPollingByPollingToken=async function(t){await(0,P.submitRequestToBackground)("currencyRateStopPollingByPollingToken",[t]),await wt(t)},n.decodeTransactionData=async function({transactionData:t,contractAddress:e,chainId:n}){return await(0,P.submitRequestToBackground)("decodeTransactionData",[{transactionData:t,contractAddress:e,chainId:n}])},n.decryptMsg=function(t){return a.default.debug("action - decryptMsg"),async e=>{e(Z()),a.default.debug("actions calling background.decryptMessage");try{await(0,P.submitRequestToBackground)("decryptMessage",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),e(nt(t)),t}finally{e(tt())}return await st(e),e(F(t.metamaskId)),e(X()),t}},n.decryptMsgInline=function(t){return a.default.debug("action - decryptMsgInline"),async e=>{a.default.debug("actions calling background.decryptMessageInline");try{await(0,P.submitRequestToBackground)("decryptMessageInline",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),e(nt(t)),t}return(await st(e)).unapprovedDecryptMsgs[t.metamaskId]}},n.deleteAccountSyncingDataFromUserStorage=function(){return async()=>{try{return await(0,P.submitRequestToBackground)("deleteAccountSyncingDataFromUserStorage",[i.USER_STORAGE_FEATURE_NAMES.accounts])}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.deleteExpiredNotifications=function(){return async(t,e)=>{const n=e().metamask.metamaskNotificationsList.filter((t=>{const e=new Date(Date.now()-B.NOTIFICATIONS_EXPIRATION_DELAY);return Boolean(t.readDate&&new Date(t.readDate)<e)})).map((({id:t})=>t));n.length&&(await(0,P.submitRequestToBackground)("deleteNotificationsById",[n]),await st(t))}},n.deleteInterface=function(t){return async e=>{await(0,P.submitRequestToBackground)("deleteInterface",[t]),await st(e)}},n.deleteNotificationsById=function(t){return async()=>{try{return await(0,P.submitRequestToBackground)("deleteNotificationsById",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.deleteOnChainTriggersByAccount=function(t){return async()=>{try{await(0,P.submitRequestToBackground)("deleteOnChainTriggersByAccount",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.detectNfts=function(){return async t=>{t(J()),a.default.debug("background.detectNfts");try{await(0,P.submitRequestToBackground)("detectNfts")}finally{t(et())}await st(t)}},n.detectTokens=function(){return async t=>{t(Z()),a.default.debug("background.detectTokens"),await(0,P.submitRequestToBackground)("detectTokens"),t(tt()),await st(t)}},n.disableAccountUpgradeForChain=async function(t){return await(0,P.submitRequestToBackground)("disableAccountUpgradeForChain",[t])},n.disableMetamaskNotifications=function(){return async()=>{try{await(0,P.submitRequestToBackground)("disableMetamaskNotifications")}catch(t){throw a.default.error(t),t}}},n.disableProfileSyncing=function(){return async()=>{try{await(0,P.submitRequestToBackground)("disableProfileSyncing")}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.disableSnap=function(t){return async e=>{await(0,P.submitRequestToBackground)("disableSnap",[t]),await st(e)}},n.disconnectOriginFromSnap=function(t,e){return async n=>{await(0,P.submitRequestToBackground)("disconnectOriginFromSnap",[t,e]),await st(n)}},n.dismissSmartTransactionsErrorMessage=function(){return{type:M.DISMISS_SMART_TRANSACTIONS_ERROR_MESSAGE}},n.displayWarning=nt,n.enableMetamaskNotifications=function(){return async()=>{try{await(0,P.submitRequestToBackground)("enableMetamaskNotifications")}catch(t){throw a.default.error(t),t}}},n.enableProfileSyncing=function(){return async()=>{try{await(0,P.submitRequestToBackground)("enableProfileSyncing")}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.enableSnap=function(t){return async e=>{await(0,P.submitRequestToBackground)("enableSnap",[t]),await st(e)}},n.encryptionPublicKeyMsg=function(t){return a.default.debug("action - encryptionPublicKeyMsg"),async e=>{e(Z()),a.default.debug("actions calling background.encryptionPublicKey");try{await(0,P.submitRequestToBackground)("encryptionPublicKey",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),e(nt(t)),t}finally{e(tt())}return await st(e),e(F(t.metamaskId)),e(X()),t}},n.endBackgroundTrace=async function(t){const e=t.timestamp||performance.timeOrigin+performance.now();await(0,P.submitRequestToBackground)("endTrace",[{...t,timestamp:e}])},n.estimateGas=function(t){return(0,P.submitRequestToBackground)("estimateGas",[t])},n.exportAccount=function(t,e,n,r){return function(o){return o(Z()),a.default.debug("background.verifyPassword"),new Promise(((s,i)=>{(0,P.callBackgroundMethod)("verifyPassword",[t],(function(u){if(u)return a.default.error("Error in verifying password."),o(tt()),o(nt("Incorrect Password.")),void i(u);a.default.debug("background.exportAccount"),(0,P.callBackgroundMethod)("exportAccount",[e,t],(function(t,e){if(o(tt()),t)return(0,R.logErrorWithMessage)(t),o(nt("Had a problem exporting the account.")),void i(t);n(e),r(!0),s(e)}))}))}))}},n.exportAccounts=function(t,e){return function(n){return a.default.debug("background.verifyPassword"),new Promise(((r,o)=>{(0,P.callBackgroundMethod)("verifyPassword",[t],(function(s){if(s)return a.default.error("Error in submitting password."),void o(s);a.default.debug("background.exportAccounts");const i=e.map((e=>new Promise(((a,r)=>(0,P.callBackgroundMethod)("exportAccount",[e,t],(function(t,e){if(t)return(0,R.logErrorWithMessage)(t),n(nt("Had a problem exporting the account.")),void r(t);a(e)}))))));r(Promise.all(i))}))}))}},n.fetchAndSetQuotes=function(t,e){return async n=>{const[a,r]=await(0,P.submitRequestToBackground)("fetchAndSetQuotes",[t,e]);return await st(n),[a,r]}},n.fetchAndUpdateMetamaskNotifications=function(t){return async()=>{try{return await(0,P.submitRequestToBackground)("fetchAndUpdateMetamaskNotifications",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.fetchSmartTransactionFees=function(t,e){return async n=>{e&&(e.value="0x0");try{const a=await await(0,P.submitRequestToBackground)("fetchSmartTransactionFees",[t,e]);return n({type:M.SET_SMART_TRANSACTIONS_ERROR,payload:null}),a}catch(t){if((0,R.logErrorWithMessage)(t),(0,R.isErrorWithMessage)(t)){const e=(0,R.getErrorMessage)(t);if(e.startsWith("Fetch error:")){const t=(0,h.parseSmartTransactionsError)(e);n({type:M.SET_SMART_TRANSACTIONS_ERROR,payload:t})}}throw t}}},n.fetchSmartTransactionsLiveness=function(){return async()=>{try{await(0,P.submitRequestToBackground)("fetchSmartTransactionsLiveness")}catch(t){(0,R.logErrorWithMessage)(t)}}},n.finalizeEventFragment=function(t,e){return(0,P.submitRequestToBackground)("finalizeEventFragment",[t,e])},n.forceUpdateMetamaskState=st,n.forgetDevice=function(t){return a.default.debug("background.forgetDevice",t),async e=>{e(Z());try{await(0,P.submitRequestToBackground)("forgetDevice",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),e(nt(t)),t}finally{e(tt())}await st(e)}},n.gasFeeStartPollingByNetworkClientId=async function(t){const e=await(0,P.submitRequestToBackground)("gasFeeStartPolling",[{networkClientId:t}]);return await ft(e),e},n.gasFeeStopPollingByPollingToken=async function(t){await(0,P.submitRequestToBackground)("gasFeeStopPollingByPollingToken",[t]),await wt(t)},n.getBalancesInSingleCall=async function(t,e,n){return await(0,P.submitRequestToBackground)("getBalancesInSingleCall",[t,e,n])},n.getCode=async function(t,e){return await(0,P.submitRequestToBackground)("getCode",[t,e])},n.getContractMethodData=function(t=""){return async(e,n)=>{const r=(0,d.addHexPrefix)(t).slice(0,10);if(r.length<10)return{};const{knownMethodData:o,use4ByteResolution:s}=n().metamask;if(null!=o&&o[r]&&0!==Object.keys(o[r]).length)return o[r];a.default.debug("loadingMethodData");const{name:i,params:u}=await(0,A.getMethodDataAsync)(r,s);return(0,P.callBackgroundMethod)("addKnownMethodData",[r,{name:i,params:u}],(t=>{t&&e(nt(t))})),{name:i,params:u}}},n.getCurrentNetworkEIP1559Compatibility=async function(){let t;try{t=await(0,P.submitRequestToBackground)("getCurrentNetworkEIP1559Compatibility")}catch(t){console.error(t)}return t},n.getGasFeeTimeEstimate=function(t,e){return(0,P.submitRequestToBackground)("getGasFeeTimeEstimate",[t,e])},n.getLastInteractedConfirmationInfo=async function(){return await(0,P.submitRequestToBackground)("getLastInteractedConfirmationInfo")},n.getLayer1GasFee=function({chainId:t,networkClientId:e,transactionParams:n}){return async()=>await(0,P.submitRequestToBackground)("getLayer1GasFee",[{chainId:t,networkClientId:e,transactionParams:n}])},n.getNFTContractInfo=async function(t,e){return await(0,P.submitRequestToBackground)("getNFTContractInfo",[t,e])},n.getNetworkConfigurationByNetworkClientId=async function(t){let e;try{e=await(0,P.submitRequestToBackground)("getNetworkConfigurationByNetworkClientId",[t])}catch(t){console.error(t)}return e},n.getNextAvailableAccountName=async function(t){return await(0,P.submitRequestToBackground)("getNextAvailableAccountName",[t])},n.getNextNonce=function(t){return async(e,n)=>{const a=(0,g.getSelectedNetworkClientId)(n());let r;try{r=await(0,P.submitRequestToBackground)("getNextNonce",[t,a])}catch(t){throw e(nt(t)),t}return e(dt(r)),r}},n.getOpenMetamaskTabsIds=function(){return async t=>{t(gt(await(0,P.submitRequestToBackground)("getOpenMetamaskTabsIds")))}},n.getPhishingResult=async function(t){return await(0,P.submitRequestToBackground)("getPhishingResult",[t])},n.getRequestAccountTabIds=function(){return async t=>{t(lt(await(0,P.submitRequestToBackground)("getRequestAccountTabIds")))}},n.getRpcMethodPreferences=function(){return async t=>{t(Z()),await(0,P.submitRequestToBackground)("getRpcMethodPreferences",[]),t(tt())}},n.getSeedPhrase=O,n.getSnapAccountsById=async function(t){return await(0,P.submitRequestToBackground)("getAccountsBySnapId",[t])},n.getTokenStandardAndDetails=async function(t,e,n){return await(0,P.submitRequestToBackground)("getTokenStandardAndDetails",[t,e,n])},n.getTokenSymbol=async function(t){return await(0,P.submitRequestToBackground)("getTokenSymbol",[t])},n.getTransactions=async function(t={}){return await(0,P.submitRequestToBackground)("getTransactions",[t])},n.goHome=v,n.handleSnapRequest=async function(t){return(0,P.submitRequestToBackground)("handleSnapRequest",[t])},n.hideAccountBanner=function(){return(0,P.submitRequestToBackground)("setShowAccountBanner",[!1])},n.hideAlert=function(){return{type:M.ALERT_CLOSE}},n.hideBetaHeader=function(){return(0,P.submitRequestToBackground)("setShowBetaHeader",[!1])},n.hideDeprecatedNetworkModal=function(){return{type:M.DEPRECATED_NETWORK_POPOVER_CLOSE}},n.hideImportNftsModal=function(){return{type:M.IMPORT_NFTS_MODAL_CLOSE}},n.hideImportTokensModal=function(){return{type:M.IMPORT_TOKENS_POPOVER_CLOSE}},n.hideIpfsModal=function(){return{type:M.SHOW_IPFS_MODAL_CLOSE}},n.hideKeyringRemovalResultModal=function(){return{type:M.HIDE_KEYRING_SNAP_REMOVAL_RESULT}},n.hideLoadingIndication=tt,n.hideModal=function(){return{type:M.MODAL_CLOSE}},n.hideNetworkBanner=function(){return(0,P.submitRequestToBackground)("setShowNetworkBanner",[!1])},n.hideNetworkDropdown=function(){return{type:M.NETWORK_DROPDOWN_CLOSE}},n.hideNftStillFetchingIndication=et,n.hidePermissionsTour=function(){return(0,P.submitRequestToBackground)("setShowPermissionsTour",[!1])},n.hidePermittedNetworkToast=function(){return{type:M.SHOW_PERMITTED_NETWORK_TOAST_CLOSE}},n.hideTestNetMessage=function(){return(0,P.submitRequestToBackground)("setShowTestnetMessageInDropdown",[!1])},n.hideWarning=function(){return{type:M.HIDE_WARNING}},n.ignoreTokens=function({tokensToIgnore:t,dontShowLoadingIndicator:e=!1,networkClientId:n=null}){const a=Array.isArray(t)?t:[t];return async t=>{e||t(Z());try{await(0,P.submitRequestToBackground)("ignoreTokens",[a,n])}catch(e){(0,R.logErrorWithMessage)(e),t(nt(e))}finally{await st(t),t(tt())}}},n.importNewAccount=function(t,e,n){return async r=>{r(Z(n));try{a.default.debug("background.importAccountWithStrategy"),await(0,P.submitRequestToBackground)("importAccountWithStrategy",[t,e])}finally{r(tt())}return await st(r)}},n.isNftOwner=async function(t,e,n){return await(0,P.submitRequestToBackground)("isNftOwner",[t,e,n])},n.lockMetamask=function(){return a.default.debug("background.setLocked"),t=>(t(Z()),K().then((()=>st(t))).catch((e=>(t(nt((0,R.getErrorMessage)(e))),Promise.reject(e)))).then((()=>{t(tt()),t({type:M.LOCK_METAMASK})})).catch((()=>{t(tt()),t({type:M.LOCK_METAMASK})})))},n.markMetamaskNotificationsAsRead=function(t){return async()=>{try{await(0,P.submitRequestToBackground)("markMetamaskNotificationsAsRead",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.markPasswordForgotten=function(){return async t=>{try{await new Promise(((t,e)=>{(0,P.callBackgroundMethod)("markPasswordForgotten",[],(n=>{n?e(n):t()}))}))}finally{t(tt()),await st(t)}}},n.performSignIn=function(){return async()=>{try{await(0,P.submitRequestToBackground)("performSignIn")}catch(t){const e=t instanceof Error?t.message:"Unknown error occurred during sign-in.";throw(0,R.logErrorWithMessage)(e),t}}},n.performSignOut=function(){return async()=>{try{await(0,P.submitRequestToBackground)("performSignOut")}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.qrCodeDetected=function(t){return async e=>{await e({type:M.QR_CODE_DETECTED,value:t}),e((0,f.computeEstimatedGasLimit)())}},n.rejectAllApprovals=function(){return async t=>{await(0,P.submitRequestToBackground)("rejectAllPendingApprovals");const{pendingApprovals:e}=await st(t);0===Object.values(e).length&&t(X())}},n.rejectAllMessages=function(t){return async e=>{const n=(0,s.serializeError)(s.providerErrors.userRejectedRequest());await Promise.all(t.map((async({id:t})=>await(0,P.submitRequestToBackground)("rejectPendingApproval",[t,n]))));const{pendingApprovals:a}=await st(e);0===Object.values(a).length&&e(X())}},n.rejectPendingApproval=function(t,e){return async n=>{await(0,P.submitRequestToBackground)("rejectPendingApproval",[t,e]);const{pendingApprovals:a}=await st(n);0===Object.values(a).length&&n(X())}},n.rejectPermissionsRequest=function(t){return e=>new Promise(((n,a)=>{(0,P.callBackgroundMethod)("rejectPermissionsRequest",[t],(t=>{if(t)return e(nt(t)),void a(t);st(e).then(n).catch(a)}))}))},n.removeAccount=function(t){return async e=>{e(Z());try{await new Promise(((e,n)=>{(0,P.callBackgroundMethod)("removeAccount",[t],((t,a)=>{t?n(t):e(a)}))})),await st(e)}catch(t){throw e(nt(t)),t}finally{e(tt())}a.default.info(`Account removed: ${t}`),e(j())}},n.removeAndIgnoreNft=function(t,e,n){return async a=>{if(!t)throw new Error("MetaMask - Cannot ignore NFT without address");if(!e)throw new Error("MetaMask - Cannot ignore NFT without tokenID");n||a(Z());try{await(0,P.submitRequestToBackground)("removeAndIgnoreNft",[t,e])}catch(t){throw(0,R.logErrorWithMessage)(t),a(nt(t)),t}finally{await st(a),a(tt())}}},n.removeFromAddressBook=function(t,e){return a.default.debug("background.removeFromAddressBook"),async n=>{await(0,P.submitRequestToBackground)("removeFromAddressBook",[t,(0,y.toChecksumHexAddress)(e)]),await st(n)}},n.removeNetwork=function(t){return async()=>{try{await(0,P.submitRequestToBackground)("removeNetwork",[t])}catch(t){(0,R.logErrorWithMessage)(t)}}},n.removeNft=function(t,e,n){return async a=>{if(!t)throw new Error("MetaMask - Cannot remove NFT without address");if(!e)throw new Error("MetaMask - Cannot remove NFT without tokenID");n||a(Z());try{await(0,P.submitRequestToBackground)("removeNft",[t,e])}catch(t){(0,R.logErrorWithMessage)(t),a(nt(t))}finally{await st(a),a(tt())}}},n.removePermissionsFor=function(t){return e=>{(0,P.callBackgroundMethod)("removePermissionsFor",[t],(t=>{t&&e(nt(t))}))}},n.removePermittedAccount=function(t,e){return async n=>{await new Promise(((n,a)=>{(0,P.callBackgroundMethod)("removePermittedAccount",[t,e],(t=>{t?a(t):n()}))})),await st(n)}},n.removePermittedChain=function(t,e){return async n=>{await new Promise(((n,a)=>{(0,P.callBackgroundMethod)("removePermittedChain",[t,e],(t=>{t?a(t):n()}))})),await st(n)}},n.removePollingTokenFromAppState=wt,n.removeSlide=function(t){return async()=>{try{await(0,P.submitRequestToBackground)("removeSlide",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.removeSnap=function(t){return async(e,n)=>{var a;e(Z());const r=(null===(a=(0,l.getPermissionSubjects)(n())[t])||void 0===a||null===(a=a.permissions)||void 0===a?void 0:a.snap_manageAccounts)!==undefined;try{if(r){const e=await(0,P.submitRequestToBackground)("getAccountsBySnapId",[t]);for(const t of e)await(0,P.submitRequestToBackground)("removeAccount",[t])}await(0,P.submitRequestToBackground)("removeSnap",[t]),await st(e)}catch(t){throw e(nt(t)),t}finally{e(tt())}}},n.requestAccountsAndChainPermissionsWithId=function(t){return async e=>{const n=await(0,P.submitRequestToBackground)("requestAccountsAndChainPermissionsWithId",[t]);return await st(e),n}},n.requestRevealSeedWords=function(t){return async e=>{e(Z()),a.default.debug("background.verifyPassword");try{await C(t);return await O(t)}finally{e(tt())}}},n.requestUserApproval=function({origin:t,type:e,requestData:n}){return async a=>{try{await(0,P.submitRequestToBackground)("requestUserApproval",[{origin:t,type:e,requestData:n}])}catch(t){(0,R.logErrorWithMessage)(t),a(nt("Had trouble requesting user approval"))}}},n.resetAccount=function(){return t=>(t(Z()),new Promise(((e,n)=>{(0,P.callBackgroundMethod)("resetAccount",[],((r,o)=>{if(t(tt()),r)return(0,R.isErrorWithMessage)(r)&&t(nt(r)),void n(r);a.default.info(`Transaction history reset for ${o}`),t(j()),e(o)}))})))},n.resetBackgroundSwapsState=function(){return async t=>{await(0,P.submitRequestToBackground)("resetSwapsState"),await st(t)}},n.resetOnboarding=function(){return async t=>{try{await t(ct(!1)),t(ot())}catch(t){console.error(t)}}},n.resetOnboardingAction=ot,n.resetSwapsPostFetchState=function(){return async t=>{await(0,P.submitRequestToBackground)("resetPostFetchState"),await st(t)}},n.resetViewedNotifications=function(){return(0,P.submitRequestToBackground)("resetViewedNotifications")},n.resolvePendingApproval=function(t,e){return async n=>{await(0,P.submitRequestToBackground)("resolvePendingApproval",[t,e]);const{pendingApprovals:a}=await st(n);0===Object.values(a).length&&n(X())}},n.restoreUserData=async function(t){try{await(0,P.submitRequestToBackground)("restoreUserData",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),t}return!0},n.revokeDynamicSnapPermissions=function(t,e){return async n=>{await(0,P.submitRequestToBackground)("revokeDynamicSnapPermissions",[t,e]),await st(n)}},n.rollbackToPreviousProvider=function(){return async t=>{try{await(0,P.submitRequestToBackground)("rollbackToPreviousProvider")}catch(e){(0,R.logErrorWithMessage)(e),t(nt("Had a problem changing networks!"))}}},n.safeRefetchQuotes=function(){return async t=>{await(0,P.submitRequestToBackground)("safeRefetchQuotes"),await st(t)}},n.setAccountDetailsAddress=function(t){return{type:M.SET_ACCOUNT_DETAILS_ADDRESS,payload:t}},n.setAccountLabel=function(t,e){return n=>(n(Z()),a.default.debug("background.setAccountLabel"),new Promise(((a,r)=>{(0,P.callBackgroundMethod)("setAccountLabel",[t,e],(o=>{if(n(tt()),o)return n(nt(o)),void r(o);n({type:M.SET_ACCOUNT_LABEL,value:{account:t,label:e}}),a(t)}))})))},n.setActiveNetwork=function(t){return async e=>{a.default.debug(`background.setActiveNetwork: ${t}`);try{await(0,P.submitRequestToBackground)("setActiveNetwork",[t])}catch(t){(0,R.logErrorWithMessage)(t),e(nt("Had a problem changing networks!"))}}},n.setActiveNetworkConfigurationId=$,n.setActiveNetworkWithError=function(t){return async e=>{a.default.debug(`background.setActiveNetwork: ${t}`);try{await(0,P.submitRequestToBackground)("setActiveNetwork",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),e(nt("Had a problem changing networks!")),new Error("Had a problem changing networks!")}}},n.setAddSnapAccountEnabled=async function(t){try{await(0,P.submitRequestToBackground)("setAddSnapAccountEnabled",[t])}catch(t){(0,R.logErrorWithMessage)(t)}},n.setAdvancedGasFee=function(t){return e=>{e(Z()),a.default.debug("background.setAdvancedGasFee"),(0,P.callBackgroundMethod)("setAdvancedGasFee",[t],(t=>{e(tt()),t&&e(nt(t))}))}},n.setAggregatedBalancePopoverShown=function(){return at("shouldShowAggregatedBalancePopover",!1)},n.setAlertEnabledness=async function(t,e){await(0,P.submitRequestToBackground)("setAlertEnabledness",[t,e])},n.setAutoLockTimeLimit=function(t){return at("autoLockTimeLimit",t)},n.setBackgroundSwapRouteState=function(t){return async e=>{await(0,P.submitRequestToBackground)("setBackgroundSwapRouteState",[t]),await st(e)}},n.setCompletedOnboarding=function(){return async t=>{t(Z());try{await(0,P.submitRequestToBackground)("completeOnboarding"),t(rt())}catch(e){throw t(nt(e)),e}finally{t(tt())}}},n.setConfirmationAdvancedDetailsOpen=function(t){return at("showConfirmationAdvancedDetails",t)},n.setConfirmationExchangeRates=function(t){return{type:M.SET_CONFIRMATION_EXCHANGE_RATES,value:t}},n.setConnectedStatusPopoverHasBeenShown=function(){return()=>{(0,P.callBackgroundMethod)("setConnectedStatusPopoverHasBeenShown",[],(t=>{if((0,R.isErrorWithMessage)(t))throw new Error((0,R.getErrorMessage)(t))}))}},n.setCurrentCurrency=function(t){return async e=>{e(Z()),a.default.debug("background.setCurrentCurrency");try{await(0,P.submitRequestToBackground)("setCurrentCurrency",[t]),await st(e)}catch(t){return(0,R.logErrorWithMessage)(t),void e(nt(t))}finally{e(tt())}}},n.setCurrentExtensionPopupId=function(t){return async e=>{await(0,P.submitRequestToBackground)("setCurrentExtensionPopupId",[t]),await st(e)}},n.setCurrentLocale=ut,n.setCustomApproveTxData=function(t){return async e=>{await(0,P.submitRequestToBackground)("setCustomApproveTxData",[t]),await st(e)}},n.setDataCollectionForMarketing=function(t){return async e=>{a.default.debug("background.setDataCollectionForMarketing"),await(0,P.submitRequestToBackground)("setDataCollectionForMarketing",[t]),e({type:M.SET_DATA_COLLECTION_FOR_MARKETING,value:t})}},n.setDefaultHomeActiveTabName=function(t){return async e=>{await(0,P.submitRequestToBackground)("setDefaultHomeActiveTabName",[t]),await st(e)}},n.setDismissSeedBackUpReminder=function(t){return async e=>{e(Z()),await(0,P.submitRequestToBackground)("setDismissSeedBackUpReminder",[t]),e(tt())}},n.setEditedNetwork=function(t=undefined){return{type:M.SET_EDIT_NETWORK,payload:t}},n.setFeatureAnnouncementsEnabled=function(t){return async()=>{try{await(0,P.submitRequestToBackground)("setFeatureAnnouncementsEnabled",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.setFeatureFlag=function(t,e,n){return a=>(a(Z()),new Promise(((r,o)=>{(0,P.callBackgroundMethod)("setFeatureFlag",[t,e],((t,e)=>{if(a(tt()),t)return a(nt(t)),void o(t);n&&a(z({name:n})),r(e)}))})))},n.setFeatureNotificationsEnabled=function(t){return at("featureNotificationsEnabled",t)},n.setFirstTimeFlowType=function(t){return async e=>{try{a.default.debug("background.setFirstTimeFlowType"),await(0,P.submitRequestToBackground)("setFirstTimeFlowType",[t]),e({type:M.SET_FIRST_TIME_FLOW_TYPE,value:t})}catch(t){e(nt(t))}}},n.setHardwareWalletDefaultHdPath=function({device:t,path:e}){return{type:M.SET_HARDWARE_WALLET_DEFAULT_HD_PATH,payload:{device:t,path:e}}},n.setHideZeroBalanceTokens=function(t){return at("hideZeroBalanceTokens",t)},n.setIncomingTransactionsPreferences=function(t,e){return async n=>{n(Z()),a.default.debug("background.setIncomingTransactionsPreferences"),await(0,P.submitRequestToBackground)("setIncomingTransactionsPreferences",[t,e]),n(tt())}},n.setInitialGasEstimate=function(t){return async e=>{await(0,P.submitRequestToBackground)("setInitialGasEstimate",[t]),await st(e)}},n.setIpfsGateway=function(t){return e=>{a.default.debug("background.setIpfsGateway"),(0,P.callBackgroundMethod)("setIpfsGateway",[t],(t=>{t&&e(nt(t))}))}},n.setIsIpfsGatewayEnabled=function(t){return e=>{a.default.debug("background.setIsIpfsGatewayEnabled"),(0,P.callBackgroundMethod)("setIsIpfsGatewayEnabled",[t],(t=>{t&&e(nt(t))}))}},n.setLastActiveTime=function(){return t=>{(0,P.callBackgroundMethod)("setLastActiveTime",[],(e=>{e&&t(nt(e))}))}},n.setLastInteractedConfirmationInfo=async function(t){return await(0,P.submitRequestToBackground)("setLastInteractedConfirmationInfo",[t])},n.setLastViewedUserSurvey=function(t){return async()=>{await(0,P.submitRequestToBackground)("setLastViewedUserSurvey",[t])}},n.setName=function(t){return async()=>{await(0,P.submitRequestToBackground)("setName",[t])}},n.setNetworkClientIdForDomain=function(t,e){return(0,P.submitRequestToBackground)("setNetworkClientIdForDomain",[t,e])},n.setNewNetworkAdded=function({networkConfigurationId:t,nickname:e}){return{type:M.SET_NEW_NETWORK_ADDED,payload:{networkConfigurationId:t,nickname:e}}},n.setNewNftAddedMessage=function(t){return{type:M.SET_NEW_NFT_ADDED_MESSAGE,payload:t}},n.setNewTokensImported=function(t){return{type:M.SET_NEW_TOKENS_IMPORTED,payload:t}},n.setNewTokensImportedError=function(t){return{type:M.SET_NEW_TOKENS_IMPORTED_ERROR,payload:t}},n.setNextNonce=dt,n.setOpenMetamaskTabsIDs=gt,n.setOpenSeaEnabled=function(t){return async e=>{e(Z()),a.default.debug("background.setOpenSeaEnabled");try{await(0,P.submitRequestToBackground)("setOpenSeaEnabled",[t])}finally{e(tt())}}},n.setOutdatedBrowserWarningLastShown=function(t){return async()=>{await(0,P.submitRequestToBackground)("setOutdatedBrowserWarningLastShown",[t])}},n.setOverrideContentSecurityPolicyHeader=function(t){return async e=>{e(Z()),await(0,P.submitRequestToBackground)("setOverrideContentSecurityPolicyHeader",[t]),e(tt())}},n.setParticipateInMetaMetrics=function(t){return e=>(a.default.debug("background.setParticipateInMetaMetrics"),new Promise(((n,r)=>{(0,P.callBackgroundMethod)("setParticipateInMetaMetrics",[t],((o,s)=>{if(a.default.debug(o),o)return e(nt(o)),void r(o);e({type:M.SET_PARTICIPATE_IN_METAMETRICS,value:t}),n([t,s])}))})))},n.setPendingTokens=function(t){const{customToken:e,selectedTokens:n={},tokenAddressList:a=[]}=t,r=null!=e&&e.address&&null!=e&&e.symbol&&Boolean((null==e?void 0:e.decimals)>=0&&(null==e?void 0:e.decimals)<=36)?{...n,[e.address]:{...e,isCustom:!0}}:n;return Object.keys(r).forEach((t=>{const e=a.find((e=>(0,p.isEqualCaseInsensitive)(e,t)));r[t]={...r[t],unlisted:!e}})),{type:M.SET_PENDING_TOKENS,payload:r}},n.setPetnamesEnabled=function(t){return at("petnamesEnabled",t)},n.setPreference=at,n.setPrivacyMode=function(t){return at("privacyMode",t,!1)},n.setRecoveryPhraseReminderHasBeenShown=function(){return()=>{(0,P.callBackgroundMethod)("setRecoveryPhraseReminderHasBeenShown",[],(t=>{if((0,R.isErrorWithMessage)(t))throw new Error((0,R.getErrorMessage)(t))}))}},n.setRecoveryPhraseReminderLastShown=function(t){return()=>{(0,P.callBackgroundMethod)("setRecoveryPhraseReminderLastShown",[t],(t=>{if((0,R.isErrorWithMessage)(t))throw new Error((0,R.getErrorMessage)(t))}))}},n.setRemoveNftMessage=function(t){return{type:M.SET_REMOVE_NFT_MESSAGE,payload:t}},n.setRequestAccountTabIds=lt,n.setSecurityAlertsEnabled=function(t){try{(0,P.submitRequestToBackground)("setSecurityAlertsEnabled",[t])}catch(t){(0,R.logErrorWithMessage)(t)}},n.setSeedPhraseBackedUp=ct,n.setSelectedAccount=function(t){return async(e,n)=>{e(Z()),a.default.debug("background.setSelectedAccount");const r=n(),o=(0,m.getUnconnectedAccountAlertEnabledness)(r),s=r.activeTab.origin,i=(0,l.getInternalAccountByAddress)(r,t),u=(0,l.getPermittedAccountsForCurrentTab)(r),c=Boolean(s)&&u.includes(i.address),d=Boolean(s)&&u.includes(t),g=c&&!d;try{await V(i.id),await st(e)}catch(t){return void e(nt(t))}finally{e(tt())}o&&g&&(e((0,w.switchedToUnconnectedAccount)()),await Tt(s))}},n.setSelectedInternalAccount=function(t){return async e=>{e(Z()),a.default.debug("background.setSelectedInternalAccount");try{await V(t)}catch(t){return void e(nt(t))}finally{e(tt())}}},n.setSelectedNetworkConfigurationId=function(t){return{type:M.SET_SELECTED_NETWORK_CONFIGURATION_ID,payload:t}},n.setSelectedQuoteAggId=function(t){return async e=>{await(0,P.submitRequestToBackground)("setSelectedQuoteAggId",[t]),await st(e)}},n.setServiceWorkerKeepAlivePreference=function(t){return async e=>{e(Z()),a.default.debug("background.setServiceWorkerKeepAlivePreference");try{await(0,P.submitRequestToBackground)("setServiceWorkerKeepAlivePreference",[t])}catch(t){e(nt(t))}finally{e(tt())}}},n.setShowExtensionInFullSizeView=function(t){return at("showExtensionInFullSizeView",t)},n.setShowFiatConversionOnTestnetsPreference=function(t){return at("showFiatInTestnets",t)},n.setShowMultiRpcModal=function(t){return at("showMultiRpcModal",t)},n.setShowNativeTokenAsMainBalancePreference=function(t){return at("showNativeTokenAsMainBalance",t)},n.setShowTestNetworks=function(t){return at("showTestNetworks",t)},n.setSlides=function(t){return{type:M.SET_SLIDES,slides:t}},n.setSmartTransactionsPreferenceEnabled=function(t){return async(e,n)=>{const a=(0,b.getSmartTransactionsOptInStatusInternal)(n());yt({category:k.MetaMetricsEventCategory.Settings,event:k.MetaMetricsEventName.SettingsUpdated,properties:{stx_opt_in:t,prev_stx_opt_in:a}}),await e(at("smartTransactionsOptInStatus",t)),await st(e)}},n.setSmartTransactionsRefreshInterval=function(t){return async()=>{if(t!==undefined&&null!==t)try{await(0,P.submitRequestToBackground)("setStatusRefreshInterval",[t])}catch(t){(0,R.logErrorWithMessage)(t)}}},n.setSnapsAddSnapAccountModalDismissed=async function(){await(0,P.submitRequestToBackground)("setSnapsAddSnapAccountModalDismissed",[!0])},n.setSnapsInstallPrivacyWarningShownStatus=function(t){return async()=>{await(0,P.submitRequestToBackground)("setSnapsInstallPrivacyWarningShownStatus",[t])}},n.setSwapsErrorKey=function(t){return async e=>{await(0,P.submitRequestToBackground)("setSwapsErrorKey",[t]),await st(e)}},n.setSwapsFeatureFlags=function(t){return async e=>{await(0,P.submitRequestToBackground)("setSwapsFeatureFlags",[t]),await st(e)}},n.setSwapsLiveness=function(t){return async e=>{await(0,P.submitRequestToBackground)("setSwapsLiveness",[t]),await st(e)}},n.setSwapsQuotesPollingLimitEnabled=function(t){return async e=>{await(0,P.submitRequestToBackground)("setSwapsQuotesPollingLimitEnabled",[t]),await st(e)}},n.setSwapsTokens=function(t){return async e=>{await(0,P.submitRequestToBackground)("setSwapsTokens",[t]),await st(e)}},n.setSwapsTxGasLimit=function(t){return async e=>{await(0,P.submitRequestToBackground)("setSwapsTxGasLimit",[t,!0]),await st(e)}},n.setSwapsTxGasPrice=function(t){return async e=>{await(0,P.submitRequestToBackground)("setSwapsTxGasPrice",[t]),await st(e)}},n.setSwitchedNetworkDetails=Y,n.setTermsOfUseLastAgreed=function(t){return async()=>{await(0,P.submitRequestToBackground)("setTermsOfUseLastAgreed",[t])}},n.setTheme=function(t){return async e=>{e(Z()),a.default.debug("background.setTheme");try{await(0,P.submitRequestToBackground)("setTheme",[t])}finally{e(tt())}}},n.setTokenNetworkFilter=function(t){return at("tokenNetworkFilter",t,!1)},n.setTokenSortConfig=function(t){return at("tokenSortConfig",t,!1)},n.setUnconnectedAccountAlertShown=Tt,n.setUse4ByteResolution=function(t){return async e=>{e(Z()),a.default.debug("background.setUse4ByteResolution");try{await(0,P.submitRequestToBackground)("setUse4ByteResolution",[t])}catch(t){e(nt(t))}finally{e(tt())}}},n.setUseAddressBarEnsResolution=function(t){return e=>{a.default.debug("background.setUseAddressBarEnsResolution"),(0,P.callBackgroundMethod)("setUseAddressBarEnsResolution",[t],(t=>{t&&e(nt(t))}))}},n.setUseBlockie=function(t){return e=>{e(Z()),a.default.debug("background.setUseBlockie"),(0,P.callBackgroundMethod)("setUseBlockie",[t],(t=>{e(tt()),t&&e(nt(t))}))}},n.setUseCurrencyRateCheck=function(t){return e=>{e(Z()),a.default.debug("background.setUseCurrencyRateCheck"),(0,P.callBackgroundMethod)("setUseCurrencyRateCheck",[t],(t=>{e(tt()),t&&e(nt(t))}))}},n.setUseExternalNameSources=function(t){try{(0,P.submitRequestToBackground)("setUseExternalNameSources",[t])}catch(t){(0,R.logErrorWithMessage)(t)}},n.setUseMultiAccountBalanceChecker=function(t){return e=>{e(Z()),a.default.debug("background.setUseMultiAccountBalanceChecker"),(0,P.callBackgroundMethod)("setUseMultiAccountBalanceChecker",[t],(t=>{e(tt()),t&&e(nt(t))}))}},n.setUseNftDetection=function(t){return async e=>{e(Z()),a.default.debug("background.setUseNftDetection");try{await(0,P.submitRequestToBackground)("setUseNftDetection",[t])}finally{e(tt())}}},n.setUsePhishDetect=function(t){return e=>{e(Z()),a.default.debug("background.setUsePhishDetect"),(0,P.callBackgroundMethod)("setUsePhishDetect",[t],(t=>{e(tt()),t&&e(nt(t))}))}},n.setUseSafeChainsListValidation=function(t){return e=>{e(Z()),a.default.debug("background.setUseSafeChainsListValidation"),(0,P.callBackgroundMethod)("setUseSafeChainsListValidation",[t],(t=>{e(tt()),t&&e(nt(t))}))}},n.setUseTokenDetection=function(t){return e=>{e(Z()),a.default.debug("background.setUseTokenDetection"),(0,P.callBackgroundMethod)("setUseTokenDetection",[t],(t=>{e(tt()),t&&e(nt(t))}))}},n.setUseTransactionSimulations=function(t){try{(0,P.submitRequestToBackground)("setUseTransactionSimulations",[t])}catch(t){(0,R.logErrorWithMessage)(t)}},n.setWatchEthereumAccountEnabled=async function(t){try{await(0,P.submitRequestToBackground)("setWatchEthereumAccountEnabled",[t])}catch(t){(0,R.logErrorWithMessage)(t)}},n.setWeb3ShimUsageAlertDismissed=async function(t){await(0,P.submitRequestToBackground)("setWeb3ShimUsageAlertDismissed",[t])},n.showAccountsPage=j,n.showAlert=function(t){return{type:M.ALERT_OPEN,payload:t}},n.showConfTxPage=Q,n.showConfirmTurnOffProfileSyncing=function(){return t=>{t(z({name:"CONFIRM_TURN_OFF_PROFILE_SYNCING"}))}},n.showConfirmTurnOnMetamaskNotifications=function(){return t=>{t(z({name:"TURN_ON_METAMASK_NOTIFICATIONS"}))}},n.showDeprecatedNetworkModal=function(){return{type:M.DEPRECATED_NETWORK_POPOVER_OPEN}},n.showImportNftsModal=function(t){return{type:M.IMPORT_NFTS_MODAL_OPEN,payload:t}},n.showImportTokensModal=function(){return{type:M.IMPORT_TOKENS_POPOVER_OPEN}},n.showIpfsModal=function(){return{type:M.SHOW_IPFS_MODAL_OPEN}},n.showKeyringSnapRemovalModal=function(t){return{type:M.SHOW_KEYRING_SNAP_REMOVAL_RESULT,payload:t}},n.showLoadingIndication=Z,n.showModal=z,n.showNetworkDropdown=function(){return{type:M.NETWORK_DROPDOWN_OPEN}},n.showNftStillFetchingIndication=J,n.showPermittedNetworkToast=function(){return{type:M.SHOW_PERMITTED_NETWORK_TOAST_OPEN}},n.showPrivateKey=function(t){return{type:M.SHOW_PRIVATE_KEY,payload:t}},n.showQrScanner=function(){return t=>{t(z({name:"QR_SCANNER"}))}},n.showSendTokenPage=function(){return{type:M.SHOW_SEND_TOKEN_PAGE}},n.signAndSendSmartTransaction=function({unsignedTransaction:t,smartTransactionFees:e}){return async n=>{const a=await kt(t,e.fees);try{return(await(0,P.submitRequestToBackground)("submitSignedTransactions",[{signedTransactions:a,signedCanceledTransactions:[],txParams:t}])).uuid}catch(t){if((0,R.logErrorWithMessage)(t),(0,R.isErrorWithMessage)(t)){const e=(0,R.getErrorMessage)(t);if(e.startsWith("Fetch error:")){const t=(0,h.parseSmartTransactionsError)(e);n({type:M.SET_SMART_TRANSACTIONS_ERROR,payload:t})}}throw t}}},n.stopPollingForQuotes=function(){return async t=>{await(0,P.submitRequestToBackground)("stopPollingForQuotes"),await st(t)}},n.submitPassword=_,n.submitQRHardwareCryptoAccount=async function(t){await(0,P.submitRequestToBackground)("submitQRHardwareCryptoAccount",[t])},n.submitQRHardwareCryptoHDKey=async function(t){await(0,P.submitRequestToBackground)("submitQRHardwareCryptoHDKey",[t])},n.submitQRHardwareSignature=async function(t,e){await(0,P.submitRequestToBackground)("submitQRHardwareSignature",[t,e])},n.syncInternalAccountsWithUserStorage=function(){return async()=>{try{return await(0,P.submitRequestToBackground)("syncInternalAccountsWithUserStorage")}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.throwTestBackgroundError=async function(t){await(0,P.submitRequestToBackground)("throwTestError",[t])},n.toggleAccountMenu=function(){return{type:M.TOGGLE_ACCOUNT_MENU}},n.toggleExternalServices=function(t){return async e=>{a.default.debug("background.toggleExternalServices");try{await(0,P.submitRequestToBackground)("toggleExternalServices",[t]),await st(e)}catch(t){e(nt(t))}}},n.toggleNetworkMenu=function(t){return{type:M.TOGGLE_NETWORK_MENU,payload:t}},n.tokenBalancesStartPolling=async function(t){const e=await(0,P.submitRequestToBackground)("tokenBalancesStartPolling",[{chainId:t}]);return await ft(e),e},n.tokenBalancesStopPollingByPollingToken=async function(t){await(0,P.submitRequestToBackground)("tokenBalancesStopPollingByPollingToken",[t]),await wt(t)},n.tokenDetectionStartPolling=async function(t){const e=await(0,P.submitRequestToBackground)("tokenDetectionStartPolling",[{chainIds:t}]);return await ft(e),e},n.tokenDetectionStopPollingByPollingToken=async function(t){await(0,P.submitRequestToBackground)("tokenDetectionStopPollingByPollingToken",[t]),await wt(t)},n.tokenListStartPolling=async function(t){const e=await(0,P.submitRequestToBackground)("tokenListStartPolling",[{chainId:t}]);return await ft(e),e},n.tokenListStopPollingByPollingToken=async function(t){await(0,P.submitRequestToBackground)("tokenListStopPollingByPollingToken",[t]),await wt(t)},n.tokenRatesStartPolling=async function(t){const e=await(0,P.submitRequestToBackground)("tokenRatesStartPolling",[{chainId:t}]);return await ft(e),e},n.tokenRatesStopPollingByPollingToken=async function(t){await(0,P.submitRequestToBackground)("tokenRatesStopPollingByPollingToken",[t]),await wt(t)},n.trackInsightSnapUsage=function(t){return async()=>{await(0,P.submitRequestToBackground)("trackInsightSnapView",[t])}},n.trackMetaMetricsEvent=yt,n.trackMetaMetricsPage=function(t,e){return(0,P.submitRequestToBackground)("trackMetaMetricsPage",[{...t,actionId:(0,P.generateActionId)()},e])},n.tryReverseResolveAddress=function(t){return()=>new Promise((e=>{(0,P.callBackgroundMethod)("tryReverseResolveAddress",[t],(t=>{t&&(0,R.logErrorWithMessage)(t),e()}))}))},n.tryUnlockMetamask=function(t){return e=>(e(Z()),e(U()),a.default.debug("background.submitPassword"),new Promise(((e,n)=>{(0,P.callBackgroundMethod)("submitPassword",[t],(t=>{t?n(t):e()}))})).then((()=>(e(G()),st(e)))).then((()=>{e(tt())})).catch((t=>(e(H((0,R.getErrorMessage)(t))),e(tt()),Promise.reject(t)))))},n.unMarkPasswordForgotten=L,n.unlockAndGetSeedPhrase=function(t){return async e=>{e(Z());try{await _(t);const n=await O(t);return await st(e),n}catch(t){throw e(nt(t)),(0,R.isErrorWithMessage)(t)?new Error((0,R.getErrorMessage)(t)):t}finally{e(tt())}}},n.unlockFailed=H,n.unlockHardwareWalletAccounts=function(t,e,n,r){return a.default.debug("background.unlockHardwareWalletAccount",t,e,n,r),async a=>{a(Z());for(const o of t)try{await(0,P.submitRequestToBackground)("unlockHardwareWalletAccount",[o,e,n,r])}catch(t){throw(0,R.logErrorWithMessage)(t),a(nt(t)),a(tt()),t}return a(tt()),undefined}},n.unlockInProgress=U,n.unlockSucceeded=G,n.updateAccountsList=function(t){return async()=>{await(0,P.submitRequestToBackground)("updateAccountsList",[t])}},n.updateAndApproveTx=function(t,e,n){return(a,r)=>{!e&&a(Z(n));const o=()=>Boolean(r().send.stage!==f.SEND_STAGES.INACTIVE);return new Promise(((e,n)=>{const r=(0,P.generateActionId)();(0,P.callBackgroundMethod)("resolvePendingApproval",[String(t.id),{txMeta:t,actionId:r},{waitForResult:!0}],(r=>{if(a(W(t.id,t.txParams)),o()||a((0,f.resetSendState)()),r)return a(v()),(0,R.logErrorWithMessage)(r),void n(r);e(t)}))})).then((()=>st(a))).then((()=>(o()||a((0,f.resetSendState)()),a(F(t.id)),a(tt()),a(D("")),a(X()),t))).catch((t=>(a(tt()),Promise.reject(t))))}},n.updateCurrentLocale=it,n.updateCustomNonce=D,n.updateCustomSwapsEIP1559GasParams=function({gasLimit:t,maxFeePerGas:e,maxPriorityFeePerGas:n}){return async a=>{await Promise.all([(0,P.submitRequestToBackground)("setSwapsTxGasLimit",[t]),(0,P.submitRequestToBackground)("setSwapsTxMaxFeePerGas",[e]),(0,P.submitRequestToBackground)("setSwapsTxMaxFeePriorityPerGas",[n])]),await st(a)}},n.updateDataDeletionTaskStatus=async function(){return await(0,P.submitRequestToBackground)("updateDataDeletionTaskStatus")},n.updateEditableParams=function(t,e){return async n=>{let a;try{a=await(0,P.submitRequestToBackground)("updateEditableParams",[t,e])}catch(t){throw(0,R.logErrorWithMessage)(t),t}return await st(n),a}},n.updateEventFragment=function(t,e){return(0,P.submitRequestToBackground)("updateEventFragment",[t,e])},n.updateHiddenAccountsList=function(t){return async()=>{await(0,P.submitRequestToBackground)("updateHiddenAccountsList",[t])}},n.updateInterfaceState=function(t,e){return async n=>{await(0,P.submitRequestToBackground)("updateInterfaceState",[t,e]),await st(n)}},n.updateMetamaskState=x,n.updateNetwork=function(t,e={}){return async n=>{a.default.debug("background.updateNetwork",t);try{return await(0,P.submitRequestToBackground)("updateNetwork",[t.chainId,t,e])}catch(t){(0,R.logErrorWithMessage)(t),n(nt("Had a problem updading networks!"))}return undefined}},n.updateNetworksList=function(t){return async()=>{await(0,P.submitRequestToBackground)("updateNetworksList",[t])}},n.updateNftDropDownState=function(t){return async e=>{await(0,P.submitRequestToBackground)("updateNftDropDownState",[t]),await st(e)}},n.updateOnChainTriggersByAccount=function(t){return async()=>{try{await(0,P.submitRequestToBackground)("updateOnChainTriggersByAccount",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.updatePreviousGasParams=function(t,e){return async()=>{let n;try{n=await(0,P.submitRequestToBackground)("updatePreviousGasParams",[t,e])}catch(t){throw(0,R.logErrorWithMessage)(t),t}return n}},n.updateProposedNames=function(t){return async()=>await(0,P.submitRequestToBackground)("updateProposedNames",[t])},n.updateSlides=function(t){return async()=>{try{await(0,P.submitRequestToBackground)("updateSlides",[t])}catch(t){throw(0,R.logErrorWithMessage)(t),t}}},n.updateSmartTransaction=function(t,e){return async n=>{try{await(0,P.submitRequestToBackground)("updateSmartTransaction",[{uuid:t,...e}])}catch(t){if((0,R.logErrorWithMessage)(t),(0,R.isErrorWithMessage)(t)){const e=(0,R.getErrorMessage)(t);if(e.startsWith("Fetch error:")){const t=(0,h.parseSmartTransactionsError)(e);n({type:M.SET_SMART_TRANSACTIONS_ERROR,payload:t})}}throw t}}},n.updateSnap=function(t,e){return async(n,a)=>{await(0,P.submitRequestToBackground)("updateSnap",[t,e]),await st(n);const r=a(),o=(0,l.getFirstSnapInstallOrUpdateRequest)(r);return null==o?void 0:o.metadata.id}},n.updateSwapsUserFeeLevel=function(t){return async e=>{await(0,P.submitRequestToBackground)("setSwapsUserFeeLevel",[t]),await st(e)}},n.updateThrottledOriginState=function(t,e){return async()=>{await(0,P.submitRequestToBackground)("updateThrottledOriginState",[t,e])}},n.updateTokenType=async function(t){try{return await(0,P.submitRequestToBackground)("updateTokenType",[t])}catch(t){(0,R.logErrorWithMessage)(t)}return undefined},n.updateTransaction=function(t,e){return async n=>{!e&&n(Z());try{await(0,P.submitRequestToBackground)("updateTransaction",[t])}catch(e){throw n(W(t.id,t.txParams)),n(tt()),n(v()),(0,R.logErrorWithMessage)(e),e}try{return n(W(t.id,t.txParams)),await st(n),n(Q({id:t.id})),t}finally{n(tt())}}},n.updateTransactionGasFees=function(t,e){return async()=>{let n;try{n=await(0,P.submitRequestToBackground)("updateTransactionGasFees",[t,e])}catch(t){throw(0,R.logErrorWithMessage)(t),t}return n}},n.updateTransactionParams=W,n.updateTransactionSendFlowHistory=function(t,e,n){return async()=>{let a;try{a=await(0,P.submitRequestToBackground)("updateTransactionSendFlowHistory",[t,e,n])}catch(t){throw(0,R.logErrorWithMessage)(t),t}return a}},n.updateViewedNotifications=function(t){return(0,P.submitRequestToBackground)("updateViewedNotifications",[t])},n.verifyPassword=C;var a=I(t("loglevel")),r=t("@sentry/browser"),o=t("lodash"),s=t("@metamask/rpc-errors"),i=t("@metamask/profile-sync-controller/sdk"),u=I(t("../../shared/lib/switch-direction")),c=t("../../shared/constants/app"),d=t("../../app/scripts/lib/util"),l=t("../selectors"),g=t("../../shared/modules/selectors/networks"),f=t("../ducks/send"),w=t("../ducks/alerts/unconnected-account"),m=t("../ducks/metamask/metamask"),y=t("../../shared/modules/hexstring-utils"),T=t("../../shared/constants/hardware-wallets"),k=t("../../shared/constants/metametrics"),h=t("../pages/swaps/swaps.util"),p=t("../../shared/modules/string-utils"),b=t("../../shared/modules/selectors"),E=t("../../shared/modules/i18n"),S=t("../../shared/modules/conversion.utils"),R=t("../../shared/modules/error"),A=t("../../shared/lib/four-byte"),B=t("../helpers/constants/notifications"),M=function(t,e){if(!e&&t&&t.__esModule)return t;if(null===t||"object"!=typeof t&&"function"!=typeof t)return{default:t};var n=N(e);if(n&&n.has(t))return n.get(t);var a={__proto__:null},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in t)if("default"!==o&&{}.hasOwnProperty.call(t,o)){var s=r?Object.getOwnPropertyDescriptor(t,o):null;s&&(s.get||s.set)?Object.defineProperty(a,o,s):a[o]=t[o]}return a.default=t,n&&n.set(t,a),a}(t("./actionConstants")),P=t("./background-connection");function N(t){if("function"!=typeof WeakMap)return null;var e=new WeakMap,n=new WeakMap;return(N=function(t){return t?n:e})(t)}function I(t){return t&&t.__esModule?t:{default:t}}function v(){return{type:M.GO_HOME}}function _(t){return new Promise(((e,n)=>{(0,P.callBackgroundMethod)("submitPassword",[t],(t=>{t?n(t):e()}))}))}function q(t){return new Promise(((e,n)=>{(0,P.callBackgroundMethod)("createNewVaultAndKeychain",[t],(t=>{t?n(t):e(!0)}))}))}function C(t){return new Promise(((e,n)=>{(0,P.callBackgroundMethod)("verifyPassword",[t],(t=>{t?n(t):e(!0)}))}))}async function O(t){const n=await(0,P.submitRequestToBackground)("getSeedPhrase",[t]);return e.from(n).toString("utf8")}function D(t){return{type:M.UPDATE_CUSTOM_NONCE,value:t}}function F(t){return e=>{e({type:M.COMPLETED_TX,value:{id:t}})}}function W(t,e){return{type:M.UPDATE_TRANSACTION_PARAMS,id:t,value:e}}function L(){return t=>new Promise((t=>{(0,P.callBackgroundMethod)("unMarkPasswordForgotten",[],(()=>{t()}))})).then((()=>st(t)))}function U(){return{type:M.UNLOCK_IN_PROGRESS}}function H(t){return{type:M.UNLOCK_FAILED,value:t}}function G(t){return{type:M.UNLOCK_SUCCEEDED,value:t}}function x(t){return(e,n)=>{var a,r;const s=n(),i=(0,g.getProviderConfig)(s),{metamask:u}=s;if(null==t||!t.length)return u;const c=function(t,e){const n={...t};for(const t of e){const{op:e,path:a,value:r}=t;if("replace"!==e)throw new Error(`Unsupported patch operation: ${e}`);n[a[0]]=r}return n}(u,t),{currentLocale:d}=u,w=(0,l.getSelectedInternalAccount)(s),m=null==w?void 0:w.address,{currentLocale:y}=c,T=(0,g.getProviderConfig)({metamask:c}),k=(0,l.getSelectedInternalAccount)({metamask:c}),h=null==k?void 0:k.address;d&&y&&d!==y&&e(it(y)),m!==h&&e({type:M.SELECTED_ADDRESS_CHANGED});const p=(null===(a=c.addressBook)||void 0===a?void 0:a[null==T?void 0:T.chainId])??{},b=(null===(r=u.addressBook)||void 0===r?void 0:r[null==i?void 0:i.chainId])??{},E=(0,l.getMetaMaskAccounts)({metamask:c}),S=(0,l.getMetaMaskAccounts)({metamask:u}),R=E[h],A=E[m];return Object.entries(S).forEach((([t,n])=>{(0,o.isEqual)(n,E[t])||e({type:M.ACCOUNT_CHANGED,payload:{account:E[t]}})})),!1===(0,o.isEqual)(A,R)&&e({type:M.SELECTED_ACCOUNT_CHANGED,payload:{account:R}}),!1===(0,o.isEqual)(b,p)&&e({type:M.ADDRESS_BOOK_UPDATED,payload:{addressBook:p}}),!1===(0,o.isEqual)(u.gasFeeEstimates,c.gasFeeEstimates)&&e({type:M.GAS_FEE_ESTIMATES_UPDATED,payload:{gasFeeEstimates:c.gasFeeEstimates,gasEstimateType:c.gasEstimateType}}),e({type:M.UPDATE_METAMASK_STATE,value:c}),i.chainId!==T.chainId&&(e({type:M.CHAIN_CHANGED,payload:T.chainId}),e((0,f.initializeSendState)({chainHasChanged:!0}))),c}}const K=()=>new Promise(((t,e)=>{(0,P.callBackgroundMethod)("setLocked",[],(n=>{n?e(n):t()}))}));async function V(t){a.default.debug("background.setSelectedInternalAccount"),await(0,P.submitRequestToBackground)("setSelectedInternalAccount",[t])}function j(){return{type:M.SHOW_ACCOUNTS_PAGE}}function Q({id:t}={}){return{type:M.SHOW_CONF_TX_PAGE,id:t}}function Y(t){return async e=>{await(0,P.submitRequestToBackground)("setSwitchedNetworkDetails",[t]),await st(e)}}async function $(t){a.default.debug(`background.setActiveNetworkConfigurationId: ${t}`),await(0,P.submitRequestToBackground)("setActiveNetworkConfigurationId",[t])}function z(t){return{type:M.MODAL_OPEN,payload:t}}function X(){return(t,e)=>{const n=e(),a=(0,l.getApprovalFlows)(n);(0,d.getEnvironmentType)()!==c.ENVIRONMENT_TYPE_NOTIFICATION||(0,l.hasTransactionPendingApprovals)(n)||(0,l.getIsSigningQRHardwareTransaction)(n)||0!==a.length||mt()}}function Z(t){return{type:M.SHOW_LOADING,payload:t}}function J(){return{type:M.SHOW_NFT_STILL_FETCHING_INDICATION}}function tt(){return{type:M.HIDE_LOADING}}function et(){return{type:M.HIDE_NFT_STILL_FETCHING_INDICATION}}function nt(t){var e;return(0,R.isErrorWithMessage)(t)?{type:M.DISPLAY_WARNING,payload:(null==t||null===(e=t.cause)||void 0===e?void 0:e.message)||t.message}:"string"==typeof t?{type:M.DISPLAY_WARNING,payload:t}:{type:M.DISPLAY_WARNING,payload:`${t}`}}function at(t,e,n=!0){return a=>(n&&a(Z()),new Promise(((r,o)=>{(0,P.callBackgroundMethod)("setPreference",[t,e],((t,e)=>{if(n&&a(tt()),t)return a(nt(t)),void o(t);r(e)}))})))}function rt(){return{type:M.COMPLETE_ONBOARDING}}function ot(){return{type:M.RESET_ONBOARDING}}async function st(t){let e;try{e=await(0,P.submitRequestToBackground)("getStatePatches")}catch(e){throw t(nt(e)),e}return t(x(e))}function it(t){return async e=>{e(Z());try{await(0,E.loadRelativeTimeFormatLocaleData)(t);const n=await(0,E.fetchLocale)(t),a=await(0,P.submitRequestToBackground)("setCurrentLocale",[t]);(0,u.default)(a),e(ut(t,n))}catch(t){return void e(nt(t))}finally{e(tt())}}}function ut(t,e){return{type:M.SET_CURRENT_LOCALE,payload:{locale:t,messages:e}}}function ct(t){return e=>(a.default.debug("background.setSeedPhraseBackedUp"),new Promise(((n,a)=>{(0,P.callBackgroundMethod)("setSeedPhraseBackedUp",[t],(t=>{if(t)return e(nt(t)),void a(t);st(e).then(n).catch(a)}))})))}function dt(t){return{type:M.SET_NEXT_NONCE,payload:t}}function lt(t){return{type:M.SET_REQUEST_ACCOUNT_TABS,payload:t}}function gt(t){return{type:M.SET_OPEN_METAMASK_TAB_IDS,payload:t}}async function ft(t){return(0,P.submitRequestToBackground)("addPollingTokenToAppState",[t,c.POLLING_TOKEN_ENVIRONMENT_TYPES[(0,d.getEnvironmentType)()]])}async function wt(t){return(0,P.submitRequestToBackground)("removePollingTokenFromAppState",[t,c.POLLING_TOKEN_ENVIRONMENT_TYPES[(0,d.getEnvironmentType)()]])}async function mt(){await(0,P.submitRequestToBackground)("markNotificationPopupAsAutomaticallyClosed"),global.platform.closeCurrentWindow()}function yt(t,e){return(0,P.submitRequestToBackground)("trackMetaMetricsEvent",[{...t,actionId:(0,P.generateActionId)()},e])}async function Tt(t){await(0,P.submitRequestToBackground)("setUnconnectedAccountAlertShown",[t])}const kt=async(t,e,n)=>{const a=e.map((e=>{const a={...t,maxFeePerGas:(0,S.decimalToHex)(e.maxFeePerGas),maxPriorityFeePerGas:(0,S.decimalToHex)(e.maxPriorityFeePerGas),gas:n?(0,S.decimalToHex)(21e3):t.gas,value:t.value};return n&&(a.to=a.from,a.data="0x"),a}));return await(0,P.submitRequestToBackground)("approveTransactionsWithSameNonce",[a])}}).call(this)}).call(this,t("buffer").Buffer)}}},{package:"$root$",file:"ui/store/actions.ts"}],[7402,{pify:4926},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(t,e,n){Object.defineProperty(n,"__esModule",{value:!0}),n.generateActionId=n.callBackgroundMethod=void 0,n.setBackgroundConnection=async function(t){o=t,s=(0,r.default)(o)},n.submitRequestToBackground=function(t,e){var n;return null===(n=s)||void 0===n?void 0:n[t](...e??[])};var a,r=(a=t("pify"))&&a.__esModule?a:{default:a};let o=null,s=null;n.generateActionId=()=>Date.now()+Math.random();n.callBackgroundMethod=(t,e,n)=>{var a;null===(a=o)||void 0===a||a[t](...e,n)}}}},{package:"$root$",file:"ui/store/background-connection.ts"}],[98,{"../../../../shared/lib/transaction-breakdown-utils":5697,"../../../../shared/lib/transactions-controller-utils":5698,"../../../../ui/ducks/bridge/utils":6667,"../../../../ui/selectors":7385},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(t,e,n){Object.defineProperty(n,"__esModule",{value:!0}),n.getTokenUsdValue=n.getHexGasTotalUsd=void 0;var a=t("../../../../shared/lib/transaction-breakdown-utils"),r=t("../../../../shared/lib/transactions-controller-utils"),o=t("../../../../ui/ducks/bridge/utils"),s=t("../../../../ui/selectors");n.getHexGasTotalUsd=({bridgeHistoryItem:t,state:e})=>{const n=e.metamask.transactions.find((e=>e.id===t.txMetaId));if(!n)return null;const o=(0,a.calcHexGasTotal)(n),i=(0,s.getUSDConversionRateByChainId)(n.chainId)(e);return(0,r.calcTokenAmount)(o,18).toNumber()*i};n.getTokenUsdValue=async({chainId:t,tokenAmount:e,tokenAddress:n,state:a})=>{const r=(0,s.getMarketData)(a),i=(0,o.exchangeRateFromMarketData)(t,n,r);if(i){return e*i*(0,s.getUSDConversionRateByChainId)(t)(a)}const u=await(0,o.getTokenExchangeRate)({chainId:t,tokenAddress:n,currency:"usd"});return u?e*u:null}}}},{package:"$root$",file:"app/scripts/lib/bridge-status/metrics-utils.ts"}]],[],{});